#!/usr/bin/env bash

# SET PWD TO DIRNAME OF THIS SCRIPT
# this script should always be located next to
# docker-compose.yml & the test_runner package
# directory (containing python env & tests)
current_dir=`dirname "$0"`
cd $current_dir
# go to root directory
cd ..

#
# START UP DOCKER STACK
#

# Uses docker-compose to start dev stack; assumes image is built.
docker-compose up -d

# Handle errors in docker-compose call
DOCKER_UP_EXIT=$?

if [ $DOCKER_UP_EXIT != 0 ] ; then
    echo "It's possible you haven't built the application image yet, try running ./scripts/build, then run ./scripts/dev again."

    exit $DOCKER_UP_EXIT
fi

#
# START WATCHER
#

# Use entr to watch a list of files, get the list by running
# rg in a loop, then restart if any file changes or new file
# is added to the watched dir
# loop is pushed to the background to allow for stack logs
# to be pulled to the foreground in the next command
while sleep 1; do
    rg --files ./src | entr -d docker-compose restart app
done &
# save while loop's PID to be able to kill it later
WATCHER_PID=$!

# Return to log output
docker-compose logs --follow

#
# STOP SCRIPT
#

# kill while loop
kill $WATCHER_PID
# teardown dev stack
docker-compose down
